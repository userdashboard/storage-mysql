name: test-and-publish

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
            - '8888:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v1
    - run: mysql -h 127.0.0.1 --port 8888 -u root -ppassword -e 'CREATE DATABASE IF NOT EXISTS test;'
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
      node-version: ${{ matrix.node-version }}
    - name: Test without encryption
      run: -
        sudo mysql -e "CREATE USER 'dashboard'@'localhost' IDENTIFIED BY 'password';"
        sudo mysql -e "GRANT ALL PRIVILEGES ON *.* to 'dashboard'@'localhost' WITH GRANT OPTION;"
        sudo mysql -e "CREATE DATABASE dashboard;""
    - name: Test without encryption
      run: cd dashboard && npm test
      env:
        NODE_ENV: testing
        FAST_START: true
        DASHBOARD_SERVER: http://localhost:9000
        DOMAIN: localhost
        STORAGE_ENGINE: "@userdashboard/storage-mysql"
        DATABASE_URL: "mysql://dashboard:password@127.0.0.1:8888/dashboard"
        GENERATE_SITEMAP_TXT: false
        GENERATE_API_TXT: false
    - name: Test with encryption
      run: cd dashboard && npm test
      env:
        NODE_ENV: testing
        FAST_START: true
        DASHBOARD_SERVER: http://localhost:9000
        DOMAIN: localhost
        STORAGE_ENGINE: @userdashboard/storage-mysql
        DATABASE_URL: "mysql://dashboard:password@127.0.0.1:8888/dashboard"
        GENERATE_SITEMAP_TXT: false
        GENERATE_API_TXT: false
        ENCRYPTION_SECRET: "12345678901234567890123456789012"
        ENCRYPTION_SECRET_IV: "1234123412341234"
    - name: Publish to NPM
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_TOKEN }}
